<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Enemy counter
enemyCounter = 0; // how long the game has gone on dictates what enemy spawns

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// wave Controller Step

// Enemy Spawn Rate

// If we spawn an enemy we temporarily store it here.
// If you want to adjust any values for a custom object you can 
// By calling with (spawnEnemy) and adjusting any local variables
var spawnEnemy; 
enemyCounter += 1; //add one to total counter
if (enemyCounter % 120) == 0{
    // Spawn enemy with no modifications
    spawnEnemy = instance_create(60, -25, obj_enemy_1);
    // Slightly advanced example of spawning an enemy
    // We spawn the enemy with instance_create
    spawnEnemy = instance_create(120, -25, obj_enemy_2);
    // For every spawnEnemy (only 1, ever)
    with (spawnEnemy){
        // It has a Create step to populate 'enemyLight' value
        with (enemyLight){
            // For every enemyLight (only ever 1). Destroy it.
            instance_destroy();
        }
        // In the scope of spawnEnemy, create enemyLight again, but blue!
        enemyLight = instance_create(x,y, obj_lightBlue);
        enemyLight.lightSize = 4;
    }
   spawnEnemy = instance_create(120, -25 - (25*1), obj_enemy_2);
   spawnEnemy = instance_create(120, -25 - (25*2), obj_enemy_2);
   spawnEnemy = instance_create(120, -25 - (25*3), obj_enemy_2);
   spawnEnemy = instance_create(120, -25 - (25*4), obj_enemy_2);
   spawnEnemy = instance_create(120, -25 - (25*5), obj_enemy_2);
   
    instance_create(30, -25, obj_powerup_rate);
    
} 


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

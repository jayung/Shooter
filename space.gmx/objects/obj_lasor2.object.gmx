<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_lasor2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_lasor2</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// How much damage does the lasor do?
damage = 1;
// How thick is this lasor?
width = 1;
// Y location of the light, we create lots of lights to cover the beams
lightY = 0;
instance_create(x, y-lightY, obj_light_lasor2);
lightY += 30;
instance_create(x, y-lightY, obj_light_lasor2);
lightY += 30;
instance_create(x, y-lightY, obj_light_lasor2);
lightY += 30;
instance_create(x, y-lightY, obj_light_lasor2);
lightY += 30;
instance_create(x, y-lightY, obj_light_lasor2);
lightY += 30;
instance_create(x, y-lightY, obj_light_lasor2);
lightY += 30;
instance_create(x, y-lightY, obj_light_lasor2);
lightY += 30;
instance_create(x, y-lightY, obj_light_lasor2);
lightY += 30;
instance_create(x, y-lightY, obj_light_lasor2);

with (obj_light_lasor2){
    lightSize = 4 + other.width;
}
xDiff = 0;
xStart = x;
x = x;

//sprite_height = 480;

image_xscale *= width;
y = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_light_lasor2) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///lasor 1 on step
//y -= 2;

transx = x;
transy = -50;
//point_distance(x1, y1, x2, y2);
//y += (transy - y)/60;
//x += (transx - x)/60;


//y -= 2;
//move_towards_point( transx, transy, 2 );
with (obj_light_lasor2){
x = other.x + (other.sprite_width / 2);
//y = other.y + (other.sprite_height /2 );
}


if (y &lt; -20){
//    instance_destroy();
}

// draw_line_width_color(global.xPlayer + (obj_player.sprite_width/2), global.yPlayer, global.xPlayer + (obj_player.sprite_width/2), global.yPlayer - 480, 8, c_lime, c_white);
x = global.xPlayer + (obj_player.sprite_width/2) - (width/2);
y = global.yPlayer - 390;
image_angle = point_direction(x, y, x, y+300) + 90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();
if (global.isTouching == 1)
{
//     draw_set_colour(c_white);
//     draw_line_width_color(x, y, x, y - 480, 8, c_lime, c_white);    

}
 draw_set_colour(c_white);
 draw_line_width_color(global.xPlayer + (obj_player.sprite_width/2) - 1, global.yPlayer, global.xPlayer + (obj_player.sprite_width/2) - 1, global.yPlayer - 480, width, c_lime, c_white);
// draw_line_width_color(50, 50, 300, 50, 4, c_red, c_blue);

//draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

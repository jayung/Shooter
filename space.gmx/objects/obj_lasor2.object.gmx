<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_lasor2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_lasor2</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// How much damage does the lasor do?
damage = 1;
// How thick is this lasor?
width = 1;
// Y location set to the top of the screen. We draw it Top down to the player
lightY = 0;
// Create the light
light1 = instance_create(x, y, obj_light);
// We scale this light to be the size of the beam
// If the light sprite ever changes, this will have to be modified to look good
//light1.image_yscale = 100.0;
light1.y = 0;
with (light1){
    image_yscale = 30.0;
    image_xscale = 0.5 + (other.width * 0.05);
}

image_xscale *= width;
y = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (light1) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

// We set our lasor X to the players X
x = global.xPlayer + (obj_player.sprite_width/2) - (width/2);
y = global.yPlayer - 390;
image_angle = point_direction(x, y, x, y+300) + 90;

// We set our light X to our light X offset
with (light1 ){
x = other.x + (other.sprite_width / 2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> playerColor =  make_color_rgb(obj_player.tRed, obj_player.tGreen, obj_player.tBlue);
 //draw_set_colour(playerColor);
 draw_line_width_color(global.xPlayer + (obj_player.sprite_width/2) - 1, global.yPlayer, global.xPlayer + (obj_player.sprite_width/2) - 1, global.yPlayer - 480, width, playerColor, playerColor);

with (light1){
    image_xscale = 0.5 + (other.width * 0.1);
    image_blend = make_color_rgb(obj_player.tRed, obj_player.tGreen, obj_player.tBlue);
    draw_set_blend_mode(bm_add);
    draw_self();
    draw_self();
    draw_self();
    draw_self();
    draw_self();
    draw_set_blend_mode(bm_normal);
    //sprite_width = other.sprite_width + 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
